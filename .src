#define BLYNK_PRINT Serial //Define BLYNK_PRINT to use Serial for debugging
#include <ESP8266WiFi.h> // Include the ESP8266WiFi library
#include <BlynkSimpleEsp8266.h> // Include the Blynk library for ESP8266

char auth[] = "YourAuthToken"; // Your Blynk authentication token
char ssid[] = "YourWiFiSSID"; // Your WiFi network SSID
char pass[] = "YourWiFiPassword"; // Your WiFi network password

BlynkTimer timer; // Create a BlynkTimer object

int pinValue = 0; // Variable to store the value received from Blynk app

#define LED1 D1 // Define pin D1 for LED1
#define LED2 D2 // Define pin D2 for LED2
#define Buzzer D3 // Define pin D3 for the buzzer
#define Sensor D0 // Define pin D0 for the sensor

void setup() {
  Serial.begin(9600); // Start serial communication for debugging
  pinMode(LED1, OUTPUT); // Set LED1 pin as output
  pinMode(LED2, OUTPUT); // Set LED2 pin as output
  pinMode(Buzzer, OUTPUT); // Set Buzzer pin as output
  pinMode(Sensor, INPUT); // Set Sensor pin as input
  Blynk.begin(auth, ssid, pass); // Connect to Blynk server
  timer.setInterval(1000L, notifiaction); // Set interval for the notification function
}

BLYNK_WRITE(V0) {
  pinValue = param.asInt(); // Update pinValue when Blynk app sends value to virtual pin V0
}

void notifiaction() {
  int sensor = digitalRead(Sensor); // Read sensor value
  
  // Check if system is ON
  if (pinValue == 1) {
    Serial.println("System is ON");
    // Check if sensor detects fire
    if (sensor == 1) {
      digitalWrite(LED2, HIGH); // Turn on LED2
      digitalWrite(LED1, LOW); // Turn off LED1
      digitalWrite(Buzzer, LOW); // Turn off buzzer
    } else if (sensor == 0) {
      Blynk.notify("WARNING! A fire was detected"); // Send notification to Blynk app
      digitalWrite(LED2, LOW); // Turn off LED2
      digitalWrite(LED1, HIGH); // Turn on LED1
      digitalWrite(Buzzer, HIGH); // Turn on buzzer
    }
  } else if (pinValue == 0) {
    Serial.println("System is OFF"); // Print message if system is OFF
  }
}

void loop() {
  Blynk.run(); // Run Blynk
  timer.run(); // Run BlynkTimer
}
